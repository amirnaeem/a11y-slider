{"data":{"readme":{"markdown":"# A11Y Slider\n\nLibrary for simple and accessible sliders. [Demo and examples](https://a11yslider.js.org/#examples)\n\n## Install\n\nUsing npm:\n\n```bash\nnpm install a11y-slider\n```\n\nUsing browser:\n\n```html\n<!-- In the <head> -->\n<link rel=\"stylesheet\" href=\"//unpkg.com/a11y-slider@latest/dist/a11y-slider.css\" />\n\n<!-- End of <body> -->\n<script src=\"//unpkg.com/a11y-slider@latest/dist/a11y-slider.js\"></script>\n```\n\n## Usage\n\nA11YSlider works by using [CSS scroll snapping](https://css-tricks.com/practical-css-scroll-snapping/). You can generate a slider by creating an overflowed container and then setting widths all via CSS. Media queries in your CSS will also update the slider.\n\n```html\n<style>\n  .slider {\n    display: flex;\n  }\n\n  .slider > * {\n    width: 100%;\n    flex: 0 0 auto;\n  }\n</style>\n\n<ul class=\"slider\">\n  <li>1</li>\n  <li>2</li>\n  <li>3</li>\n  <li>4</li>\n</ul>\n\n<script>\n  const slider = new A11YSlider(document.querySelector('.slider'), {\n    adaptiveHeight: true,\n    dots: false\n  });\n</script>\n```\n`A11YSlider(element, options)`\n\nThe `element` is the targeted slider element. The `options` is an optional parameter. See [options](#options) for more info.\n\n**Note:** A11YSlider only runs if needed! If A11YSlider detects that all slides are already visible in the container then it will not run.\n\n## Options\n\n| Option              | Type             | Description                                                                                                                                                                               |\n| ------------------- | ---------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| container           | Boolean          | Default: `true` <br>Adds a container element around the slider                                                                                                                            |\n| arrows              | Boolean          | Default: `true` <br>Enables prev/next button                                                                                                                                              |\n| prevArrow           | Node \\| NodeList | Default: `<button>` <br>Button to trigger previous slide. A11YSlider will generate one by default. Can be one or multiple HTML elements.                                                     |\n| nextArrow           | Node \\| NodeList | Default: `<button>` <br>Button to trigger next slide. A11YSlider will generate one by default. Can be one or multiple HTML elements.                                                         |\n| dots                | Boolean          | Default: `true` <br>Generate navigation dots                                                                                                                                              |\n| adaptiveHeight      | Boolean          | Default: `false` <br>Height of slider container changes according to each slide's height                                                                                                  |\n| skipBtn             | Boolean          | Default: `true` <br>Adds a skip button before the slider for a11y devices (Can be seen by tabbing)                                                                                        |\n| slidesToShow        | Number \\| Null   | Default: `null` <br>The total number of items to be shown. By default A11YSlider will work by default based off your CSS styling. This option hardcodes the width into the HTML for you.  |\n| autoplay            | Boolean          | Default: `false` <br>Enables the automatic change of slides                                                                                                                               |\n| autoplaySpeed       | Number           | Default: `4000` <br>Time between slide changes when autoplay is enabled (milliseconds)                                                                                                    |\n| autoplayHoverPause  | Boolean          | Default: `true` <br>If autoplay is enabled then pause when the slider is hovered                                                                                                          |\n| centerMode          | Boolean          | Default: `false` <br>**(EXPERIMENTAL)** Makes the center slide active                                                                                                                    |\n| infinite            | Boolean          | Default: `true` <br>Makes the slider infinitely loop                                                                                                                                      |\n| disable             | Boolean          | Default: `false` <br>Disables the slider                                                                                                                                                  |\n| responsive          | Object \\| Null   | Default: `null` <br>Define options for different viewport widths. See [responsive example](#responsive-option-example)                                                                    |\n| customPaging        | Function \\| Null   | Default: `null` <br>Define your own custom dots template                                                                    |\n\n### Responsive Option Example\n\nYou can have different options per specified viewport width. This behaves like CSS min-width media queries. Your initial options outside of the `responsive` object will work from your lowest specified viewport and down.\n\n```js\nconst slider = new A11YSlider(document.querySelector('.slider'), {\n  slidesToShow: 1,\n  arrows: true, // arrows enabled 767px and down\n  dots: false,\n  responsive: {\n    768: {\n      slidesToShow: 2,\n      arrows: false\n    },\n    960: {\n      disable: true // slider disabled 960px to 1279px\n    },\n    1280: {\n      disable: false,\n      slidesToShow: 4,\n      dots: true // dots enabled 1280px and up\n    }\n  }\n});\n```\n\n### Custom Paging Example\n\nIf you would like your own custom HTML for each dot you can pass in your own function. It must return a string and then this function will be called to create HTML for each individual dot. Note that dots will still be wrapped in a `<ul>`.\n\n```js\nconst slider = new A11YSlider(document.querySelector('.slider'), {\n  dots: true,\n  customPaging: function(index, a11ySlider) {\n      return '<button class=\"mycustombtn\">' + index + '</button>';\n  }\n});\n```\n\nWill output to:\n\n```html\n<ul class=\"a11y-slider-dots\">\n  <li><button class=\"mycustombtn\">0</button></li>\n  <li><button class=\"mycustombtn\">1</button></li>\n  <li><button class=\"mycustombtn\">2</button></li>\n  <li><button class=\"mycustombtn\">3</button></li>\n</ul>\n```\n\n## Methods\n\n```js\n// Example use of the 'scrollToSlide' method.\n// Scrolls to the 3rd slide (0-based index)\nslider.scrollToSlide(2);\n```\n\n| Method        | Arguments                           | Description                                               |\n| ------------- | ----------------------------------- | --------------------------------------------------------- |\n| scrollToSlide | Number \\| Element                   | Scrolls slider to specified slide index (0-based) or slide element |\n| updateOptions | Object                              | Enter new set of options (reloads slider)                 |\n| refreshHeight |                                   | Sets height of slider to height of the current active slide |\n| destroy       |                                     | Removes everything that the A11YSlider created in the DOM |\n\n## Events\n\n```js\n// Example use of the 'afterChange' event\nconst sliderEl = document.querySelector('.slider');\n\nsliderEl.addEventListener('afterChange', function(e) {\n  console.log(e.detail.currentSlide);\n});\n\nconst slider = new A11YSlider(sliderEl, {\n    infinite: true\n});\n```\n\n| Event         | Detail                              | Description                         |\n| ------------- | ----------------------------------- | ----------------------------------- |\n| init          | a11yslider                          | Fires after slider initialization   |\n| beforeChange  | currentSlide, nextSlide, a11yslider | Fires before slide change           |\n| afterChange   | currentSlide, a11yslider            | Fires after slide change            |\n| autoplayStart | currentSlide, a11yslider            | Fires when autoplay starts          |\n| autoplayStop  | currentSlide, a11yslider            | Fires when autoplay stops           |\n| destroy       | a11yslider                          | Fires after the slider is destroyed |\n\nEvents listeners should be added before initializing the slider if possible. For example `init` will require it.\n\n## Browser support\n\nA11YSlider works on all modern browsers including IE11. See notes for some caveats.\n\n## Notes\n\n- Non-modern browsers that doesn't support [ScrollToOptions](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions) will not have smooth scrolling when switching slides. A polyfill like [smoothscroll](https://github.com/iamdustan/smoothscroll) can be used to fix this.\n\n#### Todo\n\n- Examples\n- Look into not removing width style from slides\n- Make autoprefix run automatically\n- Better resize throttling\n- Look into enabling useCapture for scroll events to prevent window events"}}}